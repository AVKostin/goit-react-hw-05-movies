{"version":3,"file":"static/js/home-view.34f0778b.chunk.js","mappings":"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","sources":["UI/section.styled.jsx","UI/section.js","pages/HomePage/HomePage.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MoviesGallery/MovieCard/MovieCard.styled.jsx","pages/MoviesGallery/MovieCard/MovieCard.jsx","pages/MoviesGallery/MoviesGallery.styled.jsx","pages/MoviesGallery/MoviesGallery.jsx","utils/filteredGenres.js","utils/mappedMoviesList.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { breakpoints } from \"../utils/breakPoints\";\n\nexport const Wrapper = styled.section`\n  width: 100%;\n  padding: 32px 0 40px;\n      @media ${breakpoints.tablet} {\n          padding: 32px 0 60px;\n      }\n`;\n","import { Wrapper } from \"./section.styled\";\n\nexport default function Section({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n};","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { fetchTrends } from \"../../Services/movieApi\";\nimport { mappedMoviesList } from \"../../utils/mappedMoviesList\";\nimport Section from \"../../UI/section\";\nimport Container from \"../../UI/container\";\nimport MoviesGallery from \"../MoviesGallery/MoviesGallery\";\n\nexport default function HomePage({ genresList }) {\n    const [moviesList, setMoviesList] = useState([]);\n\n    useEffect(() => {\n        if (genresList.length)\n            fetchTrends().then((data) => {\n                setMoviesList(mappedMoviesList(genresList, data.results));\n            });\n    }, [genresList]);\n\n    return (\n        <>\n            <Section>\n                <Container>\n                    <MoviesGallery list={moviesList} />\n                </Container>\n            </Section>\n        </>\n    );\n}\n\nHomePage.propTypes = {\n    genresList: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n};\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../../utils/breakPoints\";\n\nexport const Wrapper = styled.div`\n    @media ${breakpoints.tablet} {\n        display: flex;\n  }\n  padding: 20px;\n  margin-top: 10px;\n  background-color: ${(p) => p.theme.cardBGColor};\n`;\n\nexport const Thumb = styled.div`\n  & img {\n    margin: 0 auto;\n    width: 100%;\n      @media ${breakpoints.tablet} {\n          width: 292px;\n    }\n      @media ${breakpoints.laptop} {\n          width: 440px;\n    }\n  }\n`;\n\nexport const Information = styled.div`\n  margin-left: 10px;\n  margin-top: 20px;\n    @media ${breakpoints.tablet} {\n        margin-top: 0;\n        margin-left: 10px;\n  }\n\n    @media ${breakpoints.laptop} {\n        margin-left: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  color: ${(p) => p.theme.altBG};\n  font-size: 18px;\n  font-weight: 700;\n  font-family: \"Comfortaa\", sans-serif;\n  padding-left:10px;\n    @media ${breakpoints.tablet} {\n        margin-bottom: 15px;\n  }\n    @media ${breakpoints.laptop} {\n        font-size: 26px;\n        padding-left:10px;\n        margin-bottom: 20px;\n  }\n`;\n\nexport const CardsDescription = styled.div`\n  height: 60px;\n  background-color: ${(p) => p.theme.cardBGColor};\n  padding-top: 10px;\n  height: 80px;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border: none;\n  text-align: left;\n  border-collapse: separate;\n  margin-bottom: 20px;\n`;\nexport const Head = styled.th`\n  font-weight: 500;\n  font-size: 13px;\n  line-height: 1.3333333333;\n  letter-spacing: 0;\n  margin-right: 15px;\n  color: #8c8c8c;\n`;\n\nexport const Data = styled.td`\n  font-size: 13px;\n  line-height: 1.3333333333;\n  letter-spacing: 0;\n  color: #000;\n\n`;\n\nexport const Rating = styled.span`\n  padding: 1px 0px;\n  color: #000;\n  background-color: #f7f7f7;\n  border-radius: 5px;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1666666667;\n  letter-spacing: 0;\n`;\n\nexport const RatingCards = styled.span`\n  display: flex;\n  align-items: top;\n  justify-content: space-between;\n`;\n\nexport const RatingAccent = styled.span`\n  padding: 2px 5px;\n  margin-right: 5px;\n  color: #000;\n  background-color: #f7f7f7;\n  border-radius: 5px;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.1666666667;\n  letter-spacing: 0;\n  color: #fff;\n  background-color: #ff6b08;\n  height: 22px;\n`;\n\nexport const AboutSubtitle = styled.p`\n  font-weight: 700;\n  font-size: 12px;\n  color: #000;\n  letter-spacing: 0;\n  text-transform: uppercase;\n  line-height: 1.3333333333;\n  margin-bottom: 10px;\n  padding-left: 33px;\n    @media ${breakpoints.tablet} {\n        font-size: 14px;\n  }\n    @media ${breakpoints.laptop} {\n        font-size: 15px;\n  }\n`;\n\nexport const Overview = styled.p`\n  font-weight: 200;\n  font-size: 12px;\n  line-height: calc( 16 / 12);\n  color: #000;\n  letter-spacing: 0;\n  padding-left:10px;\n  text-indent: 1.5em;\n  text-align: justify;\n    @media ${breakpoints.laptop} {\n        font-size: 14px;\n`;\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../../../utils/breakPoints\";\n\nexport const Wrapper = styled.div`\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  width: 337px;\n  transform: scale(1);\n  transition: transform ${(p) => p.theme.transition};\n    @media ${breakpoints.tablet} {\n      width: 320px;\n  }\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 2px 2px 4px 3px ${(p) => p.theme.cardsShadowColor};\n    transform: scale(1.02);\n  }\n`;\n\nexport const Thumb = styled.div`\n  // margin-bottom: 5px;\n  // background-color: ${(p) => p.theme.skeletonFrom};\n`;\n\nexport const Picture = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 507px;\n`;\n\nexport const Title = styled.h3`\n  text-transform: uppercase;\n  font-size: 12px;\n  height: 26px;\n  font-weight: 500;\n  line-height: 12px / 14px;\n  color: ${(p) => p.theme.accentBG};\n  padding-left: 4px;\n  padding-top: 4px;\n\n`;\n\nexport const Genres = styled.p`\n  margin-top: 8px;\n  padding-top: 5px;\n  font-size: 12px;\n  line-height: 12px / 14px;\n  font-weight: 500;\n  color: ${(p) => p.theme.genresColor};\n  padding-left: 4px;\n`;","import PropTypes from \"prop-types\";\nimport { URL_POSTER } from \"../../../constants/index\";\nimport NoPoster from \"../../Cast/CastItem/No-photo-m.png\";\nimport { Wrapper, Thumb, Picture, Title, Genres } from \"./MovieCard.styled\";\nimport {\n    RatingCards,\n    RatingAccent,\n    CardsDescription,\n} from \"../../MovieDetails/MovieDetails.styled\";\n\nexport default function MovieCard({\n    title,\n    genres,\n    poster_path,\n    release_date,\n    vote_average,\n}) {\n    return (\n        <>\n            <Wrapper>\n                <Thumb>\n                    {poster_path !== null ? (\n                        <picture>\n                            <source\n                                srcSet={`${URL_POSTER}w500${poster_path}`}\n                                media=\"(min-width: 1024px)\"\n                            />\n                            <source\n                                srcSet={`${URL_POSTER}w342${poster_path}`}\n                                media=\"(min-width: 768px)\"\n                            />\n                            <Picture\n                                src={`${URL_POSTER}w342${poster_path}`}\n                                alt={title}\n                                loading=\"lazy\"\n                            />\n                        </picture>\n                    ) : (\n                        <Picture alt={title} loading=\"lazy\" src={NoPoster} />\n                    )}\n                </Thumb>\n                <CardsDescription>\n                    <Title>\n                        {title}\n                        <span> | </span>\n                        {release_date}\n                    </Title>\n                    <RatingCards>\n                        <Genres>{genres}</Genres>\n                        <RatingAccent>{vote_average}</RatingAccent>\n                    </RatingCards>\n                </CardsDescription>\n            </Wrapper>\n        </>\n    );\n}\n\nMovieCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    genres: PropTypes.string,\n    release_date: PropTypes.number.isRequired,\n    vote_average: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../../utils/breakPoints\";\n\nexport const Wrapper = styled.ul`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: 1fr;\n    @media ${breakpoints.tablet} {\n        gap: 20px;\n        grid-template-columns: 1fr 1fr;\n  }\n    @media ${breakpoints.laptop} {\n        gap: 15px;\n        grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nexport const Item = styled.li`\n  margin: 0 auto;\n`;\n","import PropTypes from \"prop-types\";\nimport MovieCard from \"../MoviesGallery/MovieCard/\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Wrapper, Item } from \"./MoviesGallery.styled\";\n\nexport default function MoviesGallery({ list }) {\n    const location = useLocation();\n\n    const renderGallery = () =>\n        list.map((item) => (\n            <Item key={item.id}>\n                <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                    <MovieCard {...item} />\n                </Link>\n            </Item>\n        ));\n\n    return <Wrapper>{list.length ? renderGallery() : null}</Wrapper>;\n}\n\nMoviesGallery.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            posterPath: PropTypes.string,\n            genres: PropTypes.string,\n        }),\n    ),\n};\n","export const filteredGenres = (genresList, IDs) => {\n    if (genresList.length && IDs) {\n        const str = IDs.map((ID) => genresList.find((genre) => genre.id === ID))\n            .map((item) => item?.name)\n            .join(\", \");\n        if (str) return str;\n    }\n    return \"\";\n};\n","import { filteredGenres } from \"./filteredGenres\";\n\nexport const mappedMoviesList = (genresList, list) =>\n    list.map((item) => ({\n        id: item.id,\n        title: item.title,\n        poster_path: item.poster_path,\n        release_date: parseInt(item.release_date),\n        vote_average: item.vote_average.toFixed(1),\n        genres: filteredGenres(genresList, item.genre_ids),\n    }));\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Wrapper","styled","breakpoints","Section","children","HomePage","genresList","useState","moviesList","setMoviesList","useEffect","length","fetchTrends","then","data","mappedMoviesList","results","MoviesGallery","list","p","theme","cardBGColor","Thumb","Information","Title","altBG","CardsDescription","Details","Table","Head","Data","Rating","RatingCards","RatingAccent","AboutSubtitle","Overview","transition","cardsShadowColor","skeletonFrom","Picture","accentBG","Genres","genresColor","MovieCard","title","genres","poster_path","release_date","vote_average","srcSet","URL_POSTER","media","src","alt","loading","NoPoster","Item","location","useLocation","map","item","to","id","state","from","filteredGenres","IDs","str","ID","find","genre","name","join","parseInt","toFixed","genre_ids","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}