{"version":3,"file":"static/js/home-view.abb9d21d.chunk.js","mappings":"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","sources":["UI/section.module.jsx","UI/section.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MoviesGallery/MoviesGallery.module.jsx","components/MoviesGallery/MovieCard/MovieCard.module.jsx","components/MoviesGallery/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.jsx","pages/HomePage/HomePage.jsx","utils/filteredGenres.jsx","utils/mappedMoviesList.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakpoints\"\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  padding: 32px 0 40px;\r\n    @media ${breakpoints.tablet} {\r\n      padding: 32px 0 60px;\r\n  }\r\n`;","import { Wrapper } from \"./section.module\";\r\n\r\nexport default function Section({ children }) {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakpoints\";\r\n\r\nexport const Wrapper = styled.div`\r\n  @media ${breakpoints.tablet} {\r\n    display: flex;\r\n  }\r\n  padding: 20px;\r\n  margin-top: 10px;\r\n  background-color: ${(p) => p.theme.cardBGColor};\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  & img {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n\r\n      @media ${breakpoints.tablet} {\r\n        width: 292px;\r\n    }\r\n      @media ${breakpoints.laptop} {\r\n        width: 440px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const Information = styled.div`\r\n  margin-left: 10px;\r\n  margin-top: 20px;\r\n\r\n    @media ${breakpoints.tablet} {\r\n      margin-top: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n    @media ${breakpoints.laptop} {\r\n      margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-transform: uppercase;\r\n  color: ${(p) => p.theme.altBG};\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  font-family: \"Comfortaa\", sans-serif;\r\n  padding-left:10px;\r\n  margin-bottom: 20px;\r\n\r\n    @media ${breakpoints.laptop} {\r\n      font-size: 26px;\r\n      padding-left:10px;\r\n\r\n  }\r\n`;\r\n\r\nexport const CardsDescription = styled.div`\r\nheight: 60px;\r\nbackground-color: ${(p) => p.theme.cardBGColor};\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  border: none;\r\n  text-align: left;\r\n  border-collapse: separate;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const Head = styled.th`\r\n  font-weight: 500;\r\n  font-size: 13px;\r\n  line-height: 1.3333333333;\r\n  letter-spacing: 0;\r\n  margin-right: 15px;\r\n  color: #8c8c8c;\r\n `;\r\n\r\nexport const Data = styled.td`\r\n  font-size: 13px;\r\n  line-height: 1.3333333333;\r\n  letter-spacing: 0;\r\n  color: #000;\r\n\r\n`;\r\n\r\nexport const Rating = styled.span`\r\n  padding: 1px 0px;\r\n  color: #000;\r\n  background-color: #f7f7f7;\r\n  border-radius: 5px;\r\n\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 1.1666666667;\r\n  letter-spacing: 0;\r\n`;\r\n\r\nexport const RatingAccent = styled.span`\r\n  padding: 1px 10px;\r\n  color: #000;\r\n  background-color: #f7f7f7;\r\n  border-radius: 5px;\r\n\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 1.1666666667;\r\n  letter-spacing: 0;\r\n\r\n  color: #fff;\r\n  background-color: #ff6b08;\r\n`;\r\n\r\nexport const AboutSubtitle = styled.p`\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n  color: #000;\r\n  letter-spacing: 0;\r\n  text-transform: uppercase;\r\n  line-height: 1.3333333333;\r\n  margin-bottom: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  line-height: calc( 16 / 12);\r\n  font-size: 12px;\r\n  color: #000;\r\n  letter-spacing: 0;\r\n  padding-left:10px;\r\n  text-align: justify;\r\n\r\n   @media ${breakpoints.laptop} {\r\n      font-size: 14px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakpoints\";\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: grid;\r\n  gap: 10px;\r\n  grid-template-columns: 1fr;\r\n\r\n    @media ${breakpoints.tablet} {\r\n      gap: 20px;\r\n      grid-template-columns: 1fr 1fr;\r\n  }\r\n    @media ${breakpoints.laptop} {\r\n      gap: 15px;\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin: 0 auto;\r\n`;","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakpoints\";\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  width: 337px;\r\n  transform: scale(1);\r\n  transition: transform ${(p) => p.theme.transition};\r\n    @media ${breakpoints.tablet} {\r\n      width: 320px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 2px 2px 4px 3px ${(p) => p.theme.cardsShadowColor};\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  // margin-bottom: 5px;\r\n  // background-color: ${(p) => p.theme.skeletonFrom};\r\n`;\r\n\r\nexport const Picture = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 507px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  height: 26px;\r\n  font-weight: 500;\r\n  line-height: 12px / 14px;\r\n  color: ${(p) => p.theme.accentBG};\r\n  padding-left: 4px;\r\n  padding-top: 4px;\r\n\r\n`;\r\n\r\nexport const Genres = styled.p`\r\n  margin-top: 4px;\r\n  font-size: 12px;\r\n  line-height: 12px / 14px;\r\n  font-weight: 500;\r\n  color: ${(p) => p.theme.genresColor};\r\n  padding-left: 4px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Thumb, Picture, Title, Genres } from \"./MovieCard.module\";\r\nimport NoPoster from \"../../Cast/CastItem/No-photo-m.png\";\r\nimport { CardsDescription, RatingAccent, Rating } from '../../MovieDetails/MovieDetails.styled'\r\n\r\nconst MovieCard = ({ title, poster_path, genres, release_date, vote_average }) => {\r\n  return (\r\n<>\r\n  <Wrapper>\r\n    <Thumb>\r\n      {poster_path !== null ? (\r\n        <picture>\r\n          <source\r\n            srcSet={`https://themoviedb.org/t/p/w500${poster_path}`}\r\n            media=\"(min-width: 1024px)\"\r\n          />\r\n          <source\r\n            srcSet={`https://themoviedb.org/t/p/w342${poster_path}`}\r\n            media=\"(min-width: 768px)\"\r\n          />\r\n          <Picture\r\n            alt={title}\r\n            loading=\"lazy\"\r\n            src={`https://themoviedb.org/t/p/w342${poster_path}`}\r\n          />\r\n        </picture>\r\n      ) : (\r\n        <Picture alt={title} loading=\"lazy\" src={NoPoster} />\r\n      )}\r\n    </Thumb>\r\n      <CardsDescription>\r\n        <Title>{title}<span> |</span>{release_date}</Title>\r\n      <Genres>{genres}</Genres>\r\n        <Rating>\r\n          <RatingAccent>{vote_average}</RatingAccent>\r\n        </Rating>\r\n\r\n      </CardsDescription>\r\n      </Wrapper>\r\n</>\r\n);\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string,\r\n  genres: PropTypes.string,\r\n  release_date: PropTypes.number.isRequired,\r\n  vote_average: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper, Item } from \"./MoviesGallery.module\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\n\r\nexport default function MoviesGallery ({ list }){\r\n  const location = useLocation();\r\n\r\n  const renderGallery = () =>\r\n    list.map((item) => (\r\n      <Item key={item.id}>\r\n        <Link to={`/movies/${item.id}`} state={{ from: location }}>\r\n          <MovieCard {...item} />\r\n        </Link>\r\n      </Item>\r\n    ));\r\n\r\n  return <Wrapper>{list.length ? renderGallery() : null}</Wrapper>;\r\n};\r\n\r\nMoviesGallery.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string,\r\n      genres: PropTypes.string,\r\n      release_date: PropTypes.number.isRequired,\r\n      vote_average: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n","import { fetchTrends } from \"Services/movieApi\";\r\nimport { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MoviesGallery from \"components/MoviesGallery\";\r\nimport { mappedMovies } from \"utils/mappedMoviesList\";\r\nimport Container from \"UI/container\";\r\nimport Section from \"UI/section\";\r\n\r\n\r\nexport default function HomePage({ genresList }) {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (genresList.length)\r\n      fetchTrends().then((data) => {\r\n        setMoviesList(mappedMovies(genresList, data.results));\r\n      });\r\n  }, [genresList]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <MoviesGallery list={moviesList} />\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  genresList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\n","export const filteredGenres = (genresList, IDs) => {\r\n  if (genresList.length && IDs) {\r\n    const str = IDs.map((ID) => genresList.find((genre) => genre.id === ID))\r\n      .map((item) => item?.name)\r\n      .join(\", \");\r\n\r\n    if (str) return str;\r\n  }\r\n\r\n  return \"\";\r\n};\r\n","import { filteredGenres } from \"utils/filteredGenres\";\r\n\r\nexport const mappedMovies = (genresList, list) =>\r\n  list.map((item) => ({\r\n    id: item.id,\r\n    title: item.title,\r\n    poster_path: item.poster_path,\r\n    genres: filteredGenres(genresList, item.genre_ids),\r\n  }));\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Wrapper","styled","breakpoints","Section","children","p","theme","cardBGColor","Thumb","Information","Title","altBG","CardsDescription","Details","Table","Head","Data","Rating","RatingAccent","AboutSubtitle","Overview","Item","transition","cardsShadowColor","skeletonFrom","Picture","accentBG","Genres","genresColor","title","poster_path","genres","release_date","vote_average","srcSet","media","alt","loading","src","NoPoster","MoviesGallery","list","location","useLocation","length","map","item","to","id","state","from","HomePage","genresList","useState","moviesList","setMoviesList","useEffect","fetchTrends","then","data","mappedMovies","results","filteredGenres","IDs","str","ID","find","genre","name","join","genre_ids","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}