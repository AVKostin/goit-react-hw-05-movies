{"version":3,"file":"static/js/home-view.6ae7d12f.chunk.js","mappings":"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","sources":["UI/section.styled.jsx","UI/section.jsx","pages/HomePage/HomePage.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MoviesGallery/MoviesGallery.styled.jsx","pages/MoviesGallery/MovieCard/MovieCard.styled.jsx","pages/MoviesGallery/MovieCard/MovieCard.jsx","pages/MoviesGallery/MoviesGallery.jsx","utils/filteredGenres.jsx","utils/mappedMoviesList.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakPoints\"\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  padding: 32px 0 40px;\r\n    @media ${breakpoints.tablet} {\r\n      padding: 32px 0 60px;\r\n  }\r\n`;","import { Wrapper } from \"./section.styled\";\r\n\r\nexport default function Section({ children }) {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};","import { fetchTrends } from \"Services/movieApi\";\r\nimport { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MoviesGallery from \"../MoviesGallery/MoviesGallery\";\r\nimport { mappedMoviesList } from \"utils/mappedMoviesList\";\r\nimport Container from \"UI/container\";\r\nimport Section from \"UI/section\";\r\n\r\nexport default function HomePage({ genresList }) {\r\n  const [moviesList, setMoviesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (genresList.length)\r\n      fetchTrends().then((data) => {\r\n        setMoviesList(mappedMoviesList(genresList, data.results));\r\n      });\r\n  }, [genresList]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <MoviesGallery list={moviesList} />\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  genresList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakPoints\";\r\n\r\nexport const Wrapper = styled.div`\r\n  @media ${breakpoints.tablet} {\r\n    display: flex;\r\n  }\r\n  padding: 20px;\r\n  margin-top: 10px;\r\n  background-color: ${(p) => p.theme.cardBGColor};\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  & img {\r\n    margin: 0 auto;\r\n    width: 100%;\r\n\r\n      @media ${breakpoints.tablet} {\r\n        width: 292px;\r\n    }\r\n      @media ${breakpoints.laptop} {\r\n        width: 440px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const Information = styled.div`\r\n  margin-left: 10px;\r\n  margin-top: 20px;\r\n\r\n    @media ${breakpoints.tablet} {\r\n      margin-top: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n    @media ${breakpoints.laptop} {\r\n      margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-transform: uppercase;\r\n  color: ${(p) => p.theme.altBG};\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  font-family: \"Comfortaa\", sans-serif;\r\n  padding-left:10px;\r\n    @media ${breakpoints.tablet} {\r\n       margin-bottom: 15px;\r\n  }\r\n\r\n    @media ${breakpoints.laptop} {\r\n        font-size: 26px;\r\n        padding-left:10px;\r\n        margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const CardsDescription = styled.div`\r\nheight: 60px;\r\nbackground-color: ${(p) => p.theme.cardBGColor};\r\n`;\r\n\r\nexport const Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  border: none;\r\n  text-align: left;\r\n  border-collapse: separate;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const Head = styled.th`\r\n  font-weight: 500;\r\n  font-size: 13px;\r\n  line-height: 1.3333333333;\r\n  letter-spacing: 0;\r\n  margin-right: 15px;\r\n  color: #8c8c8c;\r\n `;\r\n\r\nexport const Data = styled.td`\r\n  font-size: 13px;\r\n  line-height: 1.3333333333;\r\n  letter-spacing: 0;\r\n  color: #000;\r\n\r\n`;\r\n\r\nexport const Rating = styled.span`\r\n  padding: 1px 0px;\r\n  color: #000;\r\n  background-color: #f7f7f7;\r\n  border-radius: 5px;\r\n\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 1.1666666667;\r\n  letter-spacing: 0;\r\n`;\r\n\r\nexport const RatingAccent = styled.span`\r\n  padding: 1px 10px;\r\n  color: #000;\r\n  background-color: #f7f7f7;\r\n  border-radius: 5px;\r\n\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 1.1666666667;\r\n  letter-spacing: 0;\r\n\r\n  color: #fff;\r\n  background-color: #ff6b08;\r\n`;\r\n\r\nexport const AboutSubtitle = styled.p`\r\n  font-weight: 700;\r\n  font-size: 12px;\r\n  color: #000;\r\n  letter-spacing: 0;\r\n  text-transform: uppercase;\r\n  line-height: 1.3333333333;\r\n  margin-bottom: 10px;\r\n  padding-left: 33px;\r\n    @media ${breakpoints.tablet} {\r\n      font-size: 14px;\r\n  }\r\n\r\n    @media ${breakpoints.laptop} {\r\n      font-size: 15px;\r\n  }\r\n\r\n`;\r\n\r\nexport const Overview = styled.p`\r\nfont-weight: 200;\r\nfont-size: 12px;\r\nline-height: calc( 16 / 12);\r\ncolor: #000;\r\nletter-spacing: 0;\r\npadding-left:10px;\r\n  text-indent: 1.5em;\r\n  text-align: justify;\r\n\r\n   @media ${breakpoints.laptop} {\r\n      font-size: 14px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakPoints\";\r\n\r\nexport const Wrapper = styled.ul`\r\n  display: grid;\r\n  gap: 10px;\r\n  grid-template-columns: 1fr;\r\n\r\n    @media ${breakpoints.tablet} {\r\n      gap: 20px;\r\n      grid-template-columns: 1fr 1fr;\r\n  }\r\n    @media ${breakpoints.laptop} {\r\n      gap: 15px;\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin: 0 auto;\r\n`;","import styled from \"styled-components\";\r\nimport { breakpoints } from \"utils/breakPoints\";\r\n\r\nexport const Wrapper = styled.div`\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  width: 337px;\r\n  transform: scale(1);\r\n  transition: transform ${(p) => p.theme.transition};\r\n    @media ${breakpoints.tablet} {\r\n      width: 320px;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    box-shadow: 2px 2px 4px 3px ${(p) => p.theme.cardsShadowColor};\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  // margin-bottom: 5px;\r\n  // background-color: ${(p) => p.theme.skeletonFrom};\r\n`;\r\n\r\nexport const Picture = styled.img`\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 507px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  height: 26px;\r\n  font-weight: 500;\r\n  line-height: 12px / 14px;\r\n  color: ${(p) => p.theme.accentBG};\r\n  padding-left: 4px;\r\n  padding-top: 4px;\r\n\r\n`;\r\n\r\nexport const Genres = styled.p`\r\n  margin-top: 4px;\r\n  font-size: 12px;\r\n  line-height: 12px / 14px;\r\n  font-weight: 500;\r\n  color: ${(p) => p.theme.genresColor};\r\n  padding-left: 4px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Wrapper, Thumb, Picture, Title, Genres } from \"./MovieCard.styled\";\r\nimport { URL_POSTER } from '../../../constants'\r\nimport NoPoster from \"../../Cast/CastItem/No-photo-m.png\";\r\nimport { CardsDescription, RatingAccent, Rating } from '../../MovieDetails/MovieDetails.styled'\r\n\r\nexport default function MovieCard ({ title, poster_path, genres, release_date, vote_average }) {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Thumb>\r\n          {poster_path !== null ? (\r\n            <picture>\r\n              <source\r\n                srcSet={`${URL_POSTER}w500${poster_path}`}\r\n                media=\"(min-width: 1024px)\"\r\n              />\r\n              <source\r\n                srcSet={`${URL_POSTER}w342${poster_path}`}\r\n                media=\"(min-width: 768px)\"\r\n              />\r\n              <Picture\r\n                alt={title}\r\n                loading=\"lazy\"\r\n                src={`${URL_POSTER}w342${poster_path}`}\r\n              />\r\n            </picture>\r\n          ) : (\r\n            <Picture alt={title} loading=\"lazy\" src={NoPoster} />\r\n          )}\r\n        </Thumb>\r\n          <CardsDescription>\r\n            <Title>{title}<span> | </span>{release_date}</Title>\r\n              <Genres>{genres}</Genres>\r\n                <Rating>\r\n                  <RatingAccent>{vote_average}</RatingAccent>\r\n                </Rating>\r\n          </CardsDescription>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string,\r\n  genres: PropTypes.string,\r\n  release_date: PropTypes.number.isRequired,\r\n  vote_average: PropTypes.number.isRequired,\r\n};\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper, Item } from \"./MoviesGallery.styled\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\n\r\nexport default function MoviesGallery ({ list }){\r\n  const location = useLocation();\r\n\r\n  const renderGallery = () =>\r\n    list.map((item) => (\r\n      <Item key={item.id}>\r\n        <Link to={`/movies/${item.id}`} state={{ from: location }}>\r\n          <MovieCard {...item} />\r\n        </Link>\r\n      </Item>\r\n    ));\r\n\r\n  return <Wrapper>{list.length ? renderGallery() : null}</Wrapper>;\r\n};\r\n\r\nMoviesGallery.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string,\r\n      genres: PropTypes.string,\r\n      release_date: PropTypes.number.isRequired,\r\n      vote_average: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\n","export const filteredGenres = (genresList, IDs) => {\r\n  if (genresList.length && IDs) {\r\n    const str = IDs.map((ID) => genresList.find((genre) => genre.id === ID))\r\n      .map((item) => item?.name)\r\n      .join(\", \");\r\n\r\n    if (str) return str;\r\n  }\r\n\r\n  return \"\";\r\n};","import { filteredGenres } from \"./filteredGenres\";\r\n\r\nexport const mappedMoviesList = (genresList, list) =>\r\n  list.map((item) => ({\r\n    id: item.id,\r\n    title: item.title,\r\n    poster_path: item.poster_path,\r\n    genres: filteredGenres(genresList, item.genre_ids),\r\n  }));\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Wrapper","styled","breakpoints","Section","children","HomePage","genresList","useState","moviesList","setMoviesList","useEffect","length","fetchTrends","then","data","mappedMoviesList","results","MoviesGallery","list","p","theme","cardBGColor","Thumb","Information","Title","altBG","CardsDescription","Details","Table","Head","Data","Rating","RatingAccent","AboutSubtitle","Overview","Item","transition","cardsShadowColor","skeletonFrom","Picture","accentBG","Genres","genresColor","MovieCard","title","poster_path","genres","release_date","vote_average","srcSet","URL_POSTER","media","alt","loading","src","NoPoster","location","useLocation","map","item","to","id","state","from","filteredGenres","IDs","str","ID","find","genre","name","join","genre_ids","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}